import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Links implements LinksInterface{
	HashMap<String, HashSet<String>> wordMaps;
	
	public Links(String fileName){
		this.wordMaps = new HashMap<>();
		
		try {
			FileReader fr = new FileReader(fileName);
			Scanner currentWordScanner = new Scanner(fr);
			
			while(currentWordScanner.hasNextLine()){
				FileReader fr2 = new FileReader(fileName);
				Scanner currentCompareScanner = new Scanner(fr2);
				int letterDiff=0;
				HashSet<String> candidates = new HashSet<String>();
				String currentWord = currentWordScanner.nextLine();
				
				while(currentCompareScanner.hasNextLine()){
					letterDiff=0;
					String compareWord = currentCompareScanner.nextLine();
					if(compareWord.length()==currentWord.length()){
						
						for(int i=0; i<compareWord.length(); i++){
							if(compareWord.charAt(i)!=currentWord.charAt(i)){
								letterDiff++;
							}
							
						}
						if(letterDiff==1){
							candidates.add(compareWord);
						}
					}
				}
				wordMaps.put(currentWord, candidates);
			}
		} catch (FileNotFoundException exception) {
			exception.printStackTrace();
		}
	}

	@Override
	public Set<String> getCandidates(String word) {
		if (wordMaps.get(word).isEmpty())
			return null;
		return wordMaps.get(word);
	}

	@Override
	public boolean exists(String word) {
		return wordMaps.containsKey(word);
	}

}
